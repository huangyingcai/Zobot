C51 COMPILER V9.00   MAIN                                                                  12/07/2012 21:50:10 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "STC12C5410AD.H"
   2          
   3          
   4          #define MOVE_FORWARD 1
   5          #define MOVE_BACKWARD 0 
   6          
   7          /*
   8                  串口信息开头标识：
   9                  A：左前
  10                  B：左后
  11                  C：右前
  12                  D：右后
  13          
  14                  串口信息结束标识：
  15                  Z
  16          */
  17          #define LEFT_WHEEL_FORWARD 'A'
  18          #define LEFT_WHEEL_BACKWARD 'B'
  19          #define RIGHT_WHEEL_FORWARD 'C'
  20          #define RIGHT_WHEEL_BACKWARD 'D'
  21          #define MESSAGE_END 'Z'
  22          
  23          
  24          sbit LED = P2 ^ 1;
  25          
  26          sbit ENA = P2 ^ 5;
  27          sbit IN1 = P3 ^ 4; 
  28          
  29          sbit ENB = P2 ^ 2;
  30          sbit IN4 = P2 ^ 3;
  31          /*
  32                  IN2 : PWM3 P2.4
  33                  IN3 : PWM1 P3.5 
  34          */
  35          
  36          volatile unsigned char _SPEED;
  37          volatile unsigned char _cReceive;
  38          volatile char _pReceive[255];
  39          
  40          
  41          void InitUART  (void)
  42          {
  43   1              //AUXR1 |= 0x80; //切换第二个串口，后期采用STC12C5412AD，使用默认的串口不再切换
  44   1              SCON = 0x50;
  45   1              TMOD|= 0x20; //定时器1工作方式
  46   1              TH1 = 0xFD;
  47   1              TL1 = 0xFD;
  48   1              TR1 = 1;
  49   1              REN = 1;
  50   1              ES = 1; //允许串行口中断
  51   1              EA = 1; //开启总中断
  52   1      }
  53          
  54          
  55          void PWM_INIT (void) {
C51 COMPILER V9.00   MAIN                                                                  12/07/2012 21:50:10 PAGE 2   

  56   1              CMOD = 0x02;
  57   1              CL = 0x00;
  58   1              CH = 0x00;
  59   1              CCAPM0 = 0x42; 
  60   1              CCAP0L = 0x00;
  61   1              CCAP0H = 0x00;
  62   1      
  63   1              CCAPM1 = 0x42; 
  64   1              CCAP1L = 0x00;
  65   1              CCAP1H = 0x00;
  66   1      
  67   1              CCAPM2 = 0x42; 
  68   1              CCAP2L = 0x00;
  69   1              CCAP2H = 0x00;
  70   1      
  71   1              CCAPM3 = 0x42; 
  72   1              CCAP3L = 0x00;
  73   1              CCAP3H = 0x00;
  74   1      
  75   1              CR = 1;
  76   1      }
  77          
  78          void PWM0_SET (unsigned char a /* 0~255 */) {
  79   1              CCAP0L = a;
  80   1              CCAP0H = a;
  81   1      }
  82          
  83          
  84          void PWM1_SET (unsigned char a /* 0~255 */) {
  85   1              CCAP1L = a;
  86   1              CCAP1H = a;
  87   1      }
  88          
  89          void PWM2_SET (unsigned char a /* 0~255 */) {
  90   1              CCAP2L = a;
  91   1              CCAP2H = a;
  92   1      }
  93          
  94          void PWM3_SET (unsigned char a /* 0~255 */) {
  95   1              CCAP3L = a;
  96   1              CCAP3H = a;
  97   1      }
  98          
  99          void LEFT_WHEEL(unsigned char direction/* 0 ~ 100*/)
 100          {
 101   1              if (direction == MOVE_FORWARD)
 102   1              {
 103   2                      IN1 = 1;
 104   2                      PWM3_SET((unsigned char)(_SPEED / 100.0 * 195 + 60));   //60-255
 105   2              } 
 106   1              else 
 107   1              {
 108   2                      IN1 = 0;
 109   2                      PWM3_SET(200 - (unsigned char)(_SPEED / 100.0 * 200 )); //0-200
 110   2              }       
 111   1      }
 112          
 113          void RIGHT_WHEEL(unsigned char direction/* 0 ~ 100 */)
 114          {
 115   1              if (direction == MOVE_FORWARD)
 116   1              {
 117   2                      IN4 = 0;
C51 COMPILER V9.00   MAIN                                                                  12/07/2012 21:50:10 PAGE 3   

 118   2                      PWM1_SET(200 - (unsigned char)(_SPEED / 100.0 * 200 )); //0-200
 119   2                      
 120   2              }
 121   1              else
 122   1              {
 123   2                      IN4 = 1;
 124   2                      PWM1_SET((unsigned char)(_SPEED / 100.0 * 195 + 60));   //60-255
 125   2              }
 126   1      }
 127          
 128          void main (void)
 129          {
 130   1              ENA = 1;
 131   1              InitUART();
 132   1              PWM_INIT();
 133   1      
 134   1              _cReceive = 0;
 135   1              LED = 0;
 136   1              _SPEED = 0;
 137   1              //PWM0_SET(200);
 138   1              //PWM1_SET(255);
 139   1              //PWM2_SET(255);
 140   1              PWM3_SET(40);
 141   1      
 142   1              while(1){}
 143   1      }
 144          
 145          
 146          
 147          void serial_interrupt (void) interrupt 4 using 3
 148          {
 149   1              unsigned char i, j, FLAG;
 150   1      
 151   1      
 152   1              _pReceive[++_cReceive] = SBUF;
 153   1              if (_pReceive[_cReceive] >= 'A' && _pReceive[_cReceive] <= 'D') {
 154   2                      FLAG = _pReceive[_cReceive];
 155   2                      _cReceive = 0;  
 156   2      
 157   2              }
 158   1              
 159   1              if (_pReceive[_cReceive] == MESSAGE_END) {
 160   2                      
 161   2                      j=1;
 162   2                      _SPEED = 0;
 163   2                      for (i = _cReceive - 1; i > 0; i--)
 164   2                      {
 165   3                              _SPEED += (_pReceive[i] - '0') * j;
 166   3                              j *= 10;
 167   3                      }
 168   2              }
 169   1              
 170   1               
 171   1              RI = 0;
 172   1              if (FLAG == LEFT_WHEEL_FORWARD) LEFT_WHEEL(MOVE_FORWARD);
 173   1              if (FLAG ==     LEFT_WHEEL_BACKWARD) LEFT_WHEEL(MOVE_BACKWARD);
 174   1              if (FLAG == RIGHT_WHEEL_FORWARD) RIGHT_WHEEL(MOVE_FORWARD);
 175   1              if (FLAG == RIGHT_WHEEL_BACKWARD) RIGHT_WHEEL(MOVE_BACKWARD);
 176   1      
 177   1      }
 178                  

C51 COMPILER V9.00   MAIN                                                                  12/07/2012 21:50:10 PAGE 4   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    517    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    257       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
