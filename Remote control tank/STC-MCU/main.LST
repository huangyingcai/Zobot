C51 COMPILER V9.00   MAIN                                                                  12/12/2012 20:48:43 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "STC12C5410AD.H"
   2          
   3          
   4          #define MOVE_FORWARD 1
   5          #define MOVE_BACKWARD 0 
   6          #define MOVE_HORIZONTAL 1
   7          #define MOVE_VERTICAL 0
   8          /*
   9                  串口信息开头标识：
  10                  A：左前
  11                  B：左后
  12                  C：右前
  13                  D：右后
  14                  E: 摄像头左右
  15                  F: 摄像头上下
  16                  串口信息结束标识：
  17                  Z
  18          
  19                  RxD BLUE
  20                  TxD GREEN
  21          */
  22          #define LEFT_WHEEL_FORWARD 'A'
  23          #define LEFT_WHEEL_BACKWARD 'B'
  24          #define RIGHT_WHEEL_FORWARD 'C'
  25          #define RIGHT_WHEEL_BACKWARD 'D'
  26          #define CAMERA_HORIZONTAL 'E'
  27          #define CAMERA_VERTICAL 'F'
  28          #define MESSAGE_END 'Z'
  29          #define BEEP_A 'G'
  30          
  31          
  32          sbit LED = P2 ^ 1;
  33          sbit BEEP = P2 ^ 6;
  34          
  35          sbit ENA = P2 ^ 5;
  36          sbit IN1 = P3 ^ 4; 
  37          
  38          sbit ENB = P2 ^ 2;
  39          sbit IN4 = P2 ^ 3;
  40          /*
  41                  IN2 : PWM3 P2.4
  42                  IN3 : PWM1 P3.5 
  43          */
  44          
  45          volatile unsigned char _SPEED;
  46          volatile unsigned char _cReceive;
  47          volatile char _pReceive[255];
  48          
  49          
  50          void InitUART  (void)
  51          {
  52   1              //AUXR1 |= 0x80; //切换第二个串口，后期采用STC12C5412AD，使用默认的串口不再切换
  53   1              SCON = 0x50;
  54   1              TMOD|= 0x20; //定时器1工作方式
  55   1              TH1 = 0xFD;
C51 COMPILER V9.00   MAIN                                                                  12/12/2012 20:48:43 PAGE 2   

  56   1              TL1 = 0xFD;
  57   1              TR1 = 1;
  58   1              REN = 1;
  59   1              ES = 1; //允许串行口中断
  60   1              EA = 1; //开启总中断
  61   1      } 
  62          
  63          
  64          
  65          void PWM_INIT (void) {
  66   1              CMOD = 0x04;
  67   1              CL = 0x00;
  68   1              CH = 0x00;
  69   1              CCAPM0 = 0x42; 
  70   1              CCAP0L = 0x00;
  71   1              CCAP0H = 0x00;
  72   1      
  73   1              CCAPM1 = 0x42; 
  74   1              CCAP1L = 0x00;
  75   1              CCAP1H = 0x00;
  76   1      
  77   1              CCAPM2 = 0x42; 
  78   1              CCAP2L = 0x00;
  79   1              CCAP2H = 0x00;
  80   1      
  81   1              CCAPM3 = 0x42; 
  82   1              CCAP3L = 0x00;
  83   1              CCAP3H = 0x00;
  84   1      
  85   1              CR = 1;
  86   1      }
  87          
  88          
  89          void Timer0Init(void)           //78us@11.0592MHz
  90          {
  91   1              AUXR &= 0x7F;           //定时器12T
  92   1              TMOD &= 0xF0;           
  93   1              TMOD |= 0x02;           
  94   1              TL0 = 0xB8;
  95   1              TH0 = 0xB8;
  96   1              TF0 = 0;
  97   1              TR0 = 1;
  98   1      }       
  99          
 100          
 101          void PWM0_SET (unsigned char a /* 0~255 */) {
 102   1              CCAP0L = a;
 103   1              CCAP0H = a;
 104   1      }
 105          
 106          
 107          void PWM1_SET (unsigned char a /* 0~255 */) {
 108   1              CCAP1L = a;
 109   1              CCAP1H = a;
 110   1      }
 111          
 112          void PWM2_SET (unsigned char a /* 0~255 */) {
 113   1              CCAP2L = a;
 114   1              CCAP2H = a;
 115   1      }
 116          
 117          void PWM3_SET (unsigned char a /* 0~255 */) {
C51 COMPILER V9.00   MAIN                                                                  12/12/2012 20:48:43 PAGE 3   

 118   1              CCAP3L = a;
 119   1              CCAP3H = a;
 120   1      }
 121          
 122          void LEFT_WHEEL(unsigned char direction/* 0 ~ 100*/)
 123          {
 124   1              ENA = 1;
 125   1              if (direction == MOVE_FORWARD)
 126   1              {
 127   2                      IN1 = 1;
 128   2                      PWM3_SET((unsigned char)(_SPEED / 100.0 * 195 + 60));   //60-255
 129   2              } 
 130   1              else 
 131   1              {
 132   2                      IN1 = 0;
 133   2                      PWM3_SET(200 - (unsigned char)(_SPEED / 100.0 * 200 )); //0-200
 134   2              }
 135   1              
 136   1              if (_SPEED == 0) ENA = 0; 
 137   1      }
 138          
 139          void RIGHT_WHEEL(unsigned char direction/* 0 ~ 100 */)
 140          {
 141   1              ENB = 1;
 142   1              if (direction == MOVE_FORWARD)
 143   1              {
 144   2                      IN4 = 0;
 145   2                      PWM1_SET(200 - (unsigned char)(_SPEED / 100.0 * 200 )); //0-200
 146   2                      
 147   2              }
 148   1              else
 149   1              {
 150   2                      IN4 = 1;
 151   2                      PWM1_SET((unsigned char)(_SPEED / 100.0 * 195 + 60));   //60-255
 152   2              }
 153   1              if (_SPEED == 0) ENB = 0;
 154   1      }
 155          
 156          
 157          void CAMERA_PWM(unsigned char direction)
 158          {
 159   1              //16-43
 160   1              if (direction ==  MOVE_HORIZONTAL)
 161   1              {
 162   2                      PWM0_SET((unsigned char)(_SPEED / 100.00 * 27 + 16));
 163   2              }       
 164   1              else  //MOVE_VERTICAL
 165   1              {
 166   2                      PWM2_SET((unsigned char)(_SPEED / 100.00 * 27 + 16));
 167   2              }
 168   1      }
 169          
 170          
 171          void Delay100ms()               //@11.0592MHz
 172          {
 173   1              unsigned char i, j, k;
 174   1      
 175   1              i = 5;
 176   1              j = 52;
 177   1              k = 195;
 178   1              do
 179   1              {
C51 COMPILER V9.00   MAIN                                                                  12/12/2012 20:48:43 PAGE 4   

 180   2                      do
 181   2                      {
 182   3                              while (--k);
 183   3                      } while (--j);
 184   2              } while (--i);
 185   1      }
 186          
 187          void Delay500ms()               //@11.0592MHz
 188          {
 189   1              unsigned char i, j, k;
 190   1      
 191   1              i = 22;
 192   1              j = 3;
 193   1              k = 227;
 194   1              do
 195   1              {
 196   2                      do
 197   2                      {
 198   3                              while (--k);
 199   3                      } while (--j);
 200   2              } while (--i);
 201   1      }
 202          
 203          
 204          void main (void)
 205          {
 206   1              //unsigned char i;
 207   1      
 208   1              InitUART();
 209   1              PWM_INIT();
 210   1      
 211   1              _cReceive = 0;
 212   1              LED = 0;
 213   1              _SPEED = 0;
 214   1              PWM0_SET(150);
 215   1              //PWM2_SET(255);
 216   1              Timer0Init();
 217   1              P2M1 |= 0x64;
 218   1      
 219   1              BEEP = 1;
 220   1              Delay500ms();
 221   1              BEEP = 0;
 222   1              
 223   1      
 224   1              while(1){
 225   2                      LED = 1;
 226   2                      Delay500ms();Delay500ms();Delay500ms();
 227   2                      LED = 0;
 228   2                      Delay100ms();
 229   2                      LED = 1;
 230   2                      Delay100ms();
 231   2                      LED = 0;
 232   2                      Delay100ms();
 233   2                      //PWM0_SET(57 / 2);
 234   2                      //PWM0_SET(16); 
 235   2                      //PWM0_SET(16); //PWM0 16       - 43
 236   2                      //Delay100ms();Delay100ms();Delay100ms();Delay100ms();Delay100ms();Delay100ms();Delay100ms();Delay100ms(
             -);Delay100ms();Delay100ms();
 237   2                      //PWM0_SET(43);
 238   2                      //Delay100ms();Delay100ms();Delay100ms();Delay100ms();Delay100ms();Delay100ms();Delay100ms();Delay100ms(
             -);Delay100ms();Delay100ms();
 239   2                      
C51 COMPILER V9.00   MAIN                                                                  12/12/2012 20:48:43 PAGE 5   

 240   2              }
 241   1      }
 242          
 243          
 244          
 245          void serial_interrupt (void) interrupt 4 using 3
 246          {
 247   1              unsigned char i, j, FLAG;
 248   1      
 249   1      
 250   1              _pReceive[++_cReceive] = SBUF;
 251   1              if (_pReceive[_cReceive] >= 'A' && _pReceive[_cReceive] <= 'G') {
 252   2                      FLAG = _pReceive[_cReceive];
 253   2                      _cReceive = 0;  
 254   2      
 255   2              }
 256   1              
 257   1              if (_pReceive[_cReceive] == MESSAGE_END) {
 258   2                      
 259   2                      j=1;
 260   2                      _SPEED = 0;
 261   2                      for (i = _cReceive - 1; i > 0; i--)
 262   2                      {
 263   3                              _SPEED += (_pReceive[i] - '0') * j;
 264   3                              j *= 10;
 265   3                      }
 266   2      
 267   2                      if (FLAG == LEFT_WHEEL_FORWARD) LEFT_WHEEL(MOVE_FORWARD);
 268   2                      if (FLAG ==     LEFT_WHEEL_BACKWARD) LEFT_WHEEL(MOVE_BACKWARD);
 269   2                      if (FLAG == RIGHT_WHEEL_FORWARD) RIGHT_WHEEL(MOVE_FORWARD);
 270   2                      if (FLAG == RIGHT_WHEEL_BACKWARD) RIGHT_WHEEL(MOVE_BACKWARD);
 271   2                      if (FLAG ==     CAMERA_HORIZONTAL) CAMERA_PWM(MOVE_HORIZONTAL);
 272   2                      if (FLAG == CAMERA_VERTICAL) CAMERA_PWM(MOVE_VERTICAL); 
 273   2                      if (FLAG == BEEP_A)     { BEEP = 1; Delay500ms(); BEEP = 0; };
 274   2              }
 275   1      
 276   1              RI = 0;
 277   1              
 278   1      
 279   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    753    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    257       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
